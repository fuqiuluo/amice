name: Linux X64 Build

on:
  push:
    branches: [ master ]
    paths:
      - '**/*.rs'
      - '**/Cargo.toml'
      - '**/Cargo.lock'
      - '**/build.rs'
      - 'rust-toolchain*'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  linux-build:
    name: "LLVM/OPT ${{ matrix.llvm-version[0] }} Linux"
    runs-on: ubuntu-latest
    env:
      BUILD_OUTPUT_PATH: target/release
    strategy:
      fail-fast: false
      matrix:
        # [<major>, <feature-suffix>, <llvm-sys env suffix>]
        # 例如: LLVM_SYS_201_PREFIX 对应 20.1.x
        llvm-version:
          - ["12", "12-0", "120"]
          - ["13", "13-0", "130"]
          - ["14", "14-0", "140"]
          - ["15", "15-0", "150"]
          - ["16", "16-0", "160"]
          - ["17", "17-0", "170"]
          - ["18", "18-1", "181"]
          - ["19", "19-1", "191"]
          - ["20", "20-1", "201"]

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Add apt.llvm.org repository
        run: |
          set -euxo pipefail
          export DEBIAN_FRONTEND=noninteractive
          apt-get update
          apt-get install -y curl ca-certificates gnupg lsb-release
          distro="$(lsb_release -cs)"
          curl -fsSL https://apt.llvm.org/llvm-snapshot.gpg.key | gpg --dearmor -o /usr/share/keyrings/llvm-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/llvm-archive-keyring.gpg] http://apt.llvm.org/${distro}/ llvm-toolchain-${distro}-${{ matrix.llvm-version[0] }} main" | tee /etc/apt/sources.list.d/llvm.list
          apt-get update

      - name: Setup Rust Toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Install LLVM/Clang ${{ matrix.llvm-version[0] }} and set env
        run: |
          set -euxo pipefail
          ver=${{ matrix.llvm-version[0] }}
          apt-get install -y "llvm-${ver}" "clang-${ver}" "lld-${ver}"
          prefix="/usr/lib/llvm-${ver}"
          echo "Using LLVM prefix: ${prefix}"

          env_name="LLVM_SYS_${{ matrix.llvm-version[2] }}_PREFIX"
          echo "${env_name}=${prefix}" >> "$GITHUB_ENV"

          echo "PATH=${prefix}/bin:$PATH" >> "$GITHUB_ENV"
          echo "CC=clang" >> "$GITHUB_ENV"
          echo "CXX=clang++" >> "$GITHUB_ENV"
          echo "RUSTFLAGS=-Clinker=clang" >> "$GITHUB_ENV"

          "${prefix}/bin/llvm-config" --version
          "${prefix}/bin/clang" --version

      - name: Build libamice.so (Release)
        run: |
          cargo b --release --no-default-features --features llvm${{ matrix.llvm-version[1] }}

      - name: Upload libamice.so
        uses: actions/upload-artifact@v4
        with:
          name: libamice-llvm${{ matrix.llvm-version[0] }}-linux
          path: ${{ env.BUILD_OUTPUT_PATH }}/libamice.so
          retention-days: 30